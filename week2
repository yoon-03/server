리눅스의 특징
  오픈소스 운영체제
  멀티유저, 멀티태스킹, 다중스레드 지원
  대부분 c언어로 제작되어 있으며 약간의 어셈블리어 사용
  리눅스 /lib 디렉터리에는 동적 공유 라이브러리를 저장
    공통으로 사용하는 함수 저장(디스크 공간 절약, 동일한 코딩 지양)
    동적 라이브러리는 프로그램 실행시 필요한 기능을 가져다가 사용(메모리 효율 good)
  posix(portable operation system interface) 규격을 따름
    유닉스 운영체제에 기반을 두고 있는 표준 운영체제 인터페이스
  여러 종류의 파일시스템 지원
    파일구조는 계층구조
    ext2, ext3, ext4와 등 여러 종류의 파일 시스템 지원

리눅스의 장점
  유닉스와 완벽하게 호환
  pc용 운영체제보다 안정적
  베포판 다양(오픈소스의 장점)
  하드웨이 기능을 효과적으로 사용(SWAP 방식 사용)

리눅스의 단점
  기술지원 한계, 한글지원 미흡
  보안상 취약점 쉽게 노출 가능

리눅스 베포판의 특징
  리눅스 커널, 쉘, GNU표준 유틸리티로 구성된 운영체제
  대표적으로 레드햇, 데비안, 슬랙웨어 존재

  슬랙웨어, 데비안, 우분투, 레드햇, RHEL, 페도라, cent OS, 수세, 로키

리눅스의 역사
  1969- 켄 톰슨 초기 형태의 유닉스 개발
  1983- GNU 프로젝트 시작
  1985- 리처드 스톨먼 FSF설립(자유 소프트웨어 보급을 위한 비영리단체)
  1987- 앤드루 타넨바움 미닉스 개발 (minix 자유,오픈 소스 소프트웨어로 교육용 유닉스 계열 운영체제)
  1991- 리누스 토발즈가 미닉스를 고쳐 리눅스 개발

리눅스 라이센스
  GNU GPL
    자유롭게 사용, 복제, 수정 후 재배포하는 자유 소프트웨어
    소프트웨어를 변경할 경우 해당 소프트웨어도 GPL 라이선스로 배포되고 외부에 공표나 배포할 때에는 전체 소스코드가 무료로 공개되어야 함
    리눅스도 GPL 라이선스를 적용함
    자유는 금전적인 측면과 관계가 없기 때문에 유료로 판매한다고 해도 문제가 생기지는 않음
    프리 소프트웨어 재단(FSF)에서 만든 GNU 소프트웨어를 누구나 자유롭게 사용하도록 하기 위해 만든 저작권 없는 카피레프트(copyleft) 라이선스

  LGPL
    GPL과 다르게 단순한 사용은 소스코드를 공개하지 않아도 됌
    라이브러리에 응용프로그램을 링크 시킬 경우에는 소스코드를 공개할 의무가 없기 때문에 독점 소프트웨어로 사용 가능함
    LGPL을 사용해서 개발한 뒤 GPL로 변경이 가능

  MPL
    GPL 라이선스와 BSD 라이선스의 혼합적인 성격
    MPL 소스코드 수정 시 수정한 2차 저작물의 소스코드는 공개해야 함
    단, MPL 소스코드와 혼합하여 다른 프로그램을 개발할 경우 수정된 코드만 공개
    전체 프로그램은 비공개 가능
    MPL 라이선스로 소스코드를 수정한 경우 수정한 소스코드를 반드시 공개하고 원 저작자에게 수정한 부분을 알려야 함

  BSD, APACHE, MIT 라이선스
    BSD : 수정본을 무료로 배포하지 않아도 됌 -> 상용 소프트웨어에서도 사용
    MIT :  원작자의 저작권 정보와 라이선스 내용을 제거해서는 안됨 적용된 소프트웨어로는 X Windows System, JQuery, Node.js 등이 있다
    APACHE : 재배포할 경우 Apache License 2.0 전문을 포함시키고 관련 소프트웨어임을 밝혀야 함
